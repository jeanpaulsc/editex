(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'ajax__append_problem____body____eval_'"
p3
sS'layer'
p4
S'/Users/admin/web2py/applications/editex/controllers/compose.py'
p5
sS'code'
p6
S'import datetime\n\ndef index():\n    if session.pid:\n        redirect(\'compose\',\'active_problem\')\n    if session.active_section:\n        redirect(\'compose\',\'section_index\')\n    rows = db(db.sect.id>0).select()\n    return dict(rows=rows)\n\ndef section_index():\n    section = db(db.sect.id==request.args(0)).select().first()\n    session.active_sid=section.sid\n    session.active_section=section.title\n    session.pid=""\n    rows = db(db.segment.section_id==request.args(0)).select()\n    print "form prepped",datetime.datetime.today()\n    return dict(rows=rows)\n\ndef new_section():\n    form=SQLFORM(db.sect)\n    if form.process().accepted:\n        redirect(URL(\'compose\',\'section_index\',args=form.vars.id))\n    return dict(form=form)\n\ndef append_problem():\n    print "vars: ", request.vars.body\n    if form.process().accepted:\n        return "jquery(\'#problems\').append(%s);" % body\n    else:\n        response.flash="nope"\n    return dict()\n\n""" WRITE """\n@auth.requires_login()\ndef add_problem():\n    print \'entered add_problem\'\n    body=request.vars.body\n    print "body: ",body\n    bid = db.segment.insert(body=body)\n    print "problem inserted"\n    return "jquery(\'#problems\').append(%s);" % body\n\n@auth.requires_login()\ndef new_problem():\n    body=request.vars.body\n    form = SQLFORM(db.segment)  #,fields=[\'body\'],formstyle=\'divs\',labels={\'body\':""})\n    if form.process().accepted:\n        db(db.segment.id==form.vars.id).update(segnum=form.vars.id)\n        response.flash=form.vars.segment_body\n    return dict(form=form)\n\n@auth.requires_login()\ndef append_txt():\n    segnum = request.args(0)\n    form = SQLFORM(db.segment,fields=[\'body\'],formstyle=\'divs\',labels={\'body\':""})\n    if form.process().accepted:\n        id = form.vars.id\n        db(db.segment.id==form.vars.id).update(segnum=segnum,parent_id=None,category=\'txt\')\n        response.flash=\'record added\'\n    return dict(form=form)\n\n@auth.requires_login()\ndef append_tex():\n    segnum = request.args(0)\n    form = SQLFORM(db.segment,fields=[\'body\'],formstyle=\'divs\',labels={\'body\':""})\n    if form.process().accepted:\n        id = form.vars.id\n        db(db.segment.id==form.vars.id).update(segnum=segnum,parent_id=None,category=\'tex\')\n        response.flash=\'record added\'\n    return dict(form=form)\n\n""" READ """\n@auth.requires_login()\ndef show_problem():\n    session.cur_owner = ""\n    rows = db(db.segment.segnum==request.args(0)).select()\n    return dict(rows=rows)\n\n@cache.action()\ndef download():\n    return response.download(request, db)\n\n""" WORKING  """\nresponse._vars=response._caller(section_index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/admin/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/admin/web2py/applications/editex/controllers/compose.py", line 85, in <module>\n  File "/Users/admin/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/admin/web2py/applications/editex/controllers/compose.py", line 12, in section_index\n    section = db(db.sect.id==request.args(0)).select().first()\n  File "/Library/Python/2.7/site-packages/pydal/objects.py", line 1986, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/Library/Python/2.7/site-packages/pydal/adapters/sqlite.py", line 122, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/Library/Python/2.7/site-packages/pydal/adapters/base.py", line 1245, in select\n    sql = self._select(query, fields, attributes)\n  File "/Library/Python/2.7/site-packages/pydal/adapters/base.py", line 1132, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/Library/Python/2.7/site-packages/pydal/adapters/base.py", line 916, in expand\n    rv = op(first, second, **optional_args)\n  File "/Library/Python/2.7/site-packages/pydal/adapters/base.py", line 810, in EQ\n    self.expand(second, first.type))\n  File "/Library/Python/2.7/site-packages/pydal/adapters/base.py", line 926, in expand\n    rv = self.represent(expression, field_type)\n  File "/Library/Python/2.7/site-packages/pydal/adapters/base.py", line 1394, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'ajax__append_problem____body____eval_\'\n'
p11
s.